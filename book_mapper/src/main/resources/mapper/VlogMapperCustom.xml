<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bao.mapper.VlogMapperCustom">
    <select id="getIndexVlogVOList" parameterType="map" resultType="com.bao.vo.IndexVlogVO">
        select
           v.id              as id,
           v.vloger_id       as vlogerId,
           u.face            as vlogerFace,
           u.nickname        as vlogerName,
           v.title           as content,
           v.url             as url,
           v.cover           as cover,
           v.width           as width,
           v.height          as height,
           v.like_counts     as likeCounts,
           v.comments_counts as commentsCounts,
           v.is_private      as isPrivate
        from
             vlog v
        left join
            users u
        on
            v.vloger_id = u.id
        where
            v.is_private = 0
            <if test="paramMap.search != null and paramMap.search != ''">
                and v.title like concat('%', #{paramMap.search}, '%')
            </if>
        order by
            v.created_time
        desc
    </select>

    <select id="queryMyFollowList" parameterType="map" resultType="com.bao.vo.IndexVlogVO">
        select
        v.id              as id,
        v.vloger_id       as vlogerId,
        u.face            as vlogerFace,
        u.nickname        as vlogerName,
        v.title           as content,
        v.url             as url,
        v.cover           as cover,
        v.width           as width,
        v.height          as height,
        v.like_counts     as likeCounts,
        v.comments_counts as commentsCounts,
        v.is_private      as isPrivate
        from
            vlog v
        left join
            fans f
        on
            v.vloger_id = f.vloger_id
        left join
            users u
        on
            v.vloger_id = u.id
        where
                v.is_private = 0
            and
                f.fan_id = #{paramMap.myId}
            <if test="paramMap.isFriend == 1">
                and f.is_fan_friend_of_mine = 1
            </if>
        order by
        v.created_time
        desc
    </select>

    <select id="getIndexVlogVODetail" parameterType="map" resultType="com.bao.vo.IndexVlogVO">
        select
            v.id              as id,
            v.vloger_id       as vlogerId,
            u.face            as vlogerFace,
            u.nickname        as vlogerName,
            v.title           as content,
            v.url             as url,
            v.cover           as cover,
            v.width           as width,
            v.height          as height,
            v.like_counts     as likeCounts,
            v.comments_counts as commentsCounts,
            v.is_private      as isPrivate
        from
            vlog v
        left join
            users u
        on
            v.vloger_id = u.id
        where
            v.id = #{paramMap.vlogId}
    </select>

    <select id="queryMyLikedList" parameterType="map" resultType="com.bao.vo.IndexVlogVO">
        select
            v.id              as id,
            v.vloger_id       as vlogerId,
            u.face            as vlogerFace,
            u.nickname        as vlogerName,
            v.title           as content,
            v.url             as url,
            v.cover           as cover,
            v.width           as width,
            v.height          as height,
            v.like_counts     as likeCounts,
            v.comments_counts as commentsCounts,
            v.is_private      as isPrivate
        from
            vlog v
        left join
            my_liked_vlog mlv
        on
            v.id = mlv.vlog_id
        left join
            users u
        on
            mlv.user_id = u.id
        where
            u.id = #{paramMap.myId}
          and
            v.is_private = 0
        order by
            v.created_time
        desc
    </select>

    <select id="createTempTable" >
        create temporary table temp(
                   id varchar(24) not null primary key ,
                   like_counts int
        )
    </select>

    <insert id="insertList" parameterType="com.bao.pojo.Vlog">
        insert into temp(id, like_counts)
        values
        <foreach collection="list" item="v" separator=",">
            (#{v.id}, #{v.likeCounts})
        </foreach>
    </insert>

    <update id="updateList">
        update
            vlog v
                inner join
                temp t
                on
                    v.id = t.id
        set
            v.like_counts = t.like_counts
    </update>

    <select id="delTempTable">
        drop temporary table if exists temp
    </select>
</mapper>